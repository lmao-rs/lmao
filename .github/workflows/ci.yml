name: CI

concurrency:
  group: environment
  cancel-in-progress: false

on: [push, pull_request]

jobs:
  build-docs:
    name: Build docs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true

      - name: Build docs
        env:
          RUSTDOCFLAGS: --cfg docsrs -D broken_intra_doc_links
        run: |
          cargo doc --workspace --no-deps --features=permission-calculator
          cargo doc -p twilight-util --no-deps --all-features

  clippy:
    name: Clippy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1

      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --workspace --tests

  format:
    name: Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

  MSRV:
    name: MSRV
    runs-on: ubuntu-latest
    env:
      minrust: 1.53

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain (${{ env.minrust }})
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.minrust }}
          profile: minimal
          override: true

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1

      - run: cargo check --examples --tests --all-features
        env:
          RUSTFLAGS: "-C target-cpu=native"

  spelling:
    name: Spelling
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Run Codespell
        uses: codespell-project/actions-codespell@master

  sync-readme:
    name: Sync readme
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install cargo-sync-readme
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-sync-readme

      - name: Run in command-parser
        run: cd command-parser && cargo sync-readme --check
      - name: Run in gateway
        run: cd gateway && cargo sync-readme --check
      - name: Run in http
        run: cd http && cargo sync-readme --check
      - name: Run in lavalink
        run: cd lavalink && cargo sync-readme --check
      - name: Run in model
        run: cd model && cargo sync-readme --check
      - name: Run in standby
        run: cd standby && cargo sync-readme --check
      - name: Run in twilight
        run: cd twilight && cargo sync-readme --check
      - name: Run in embed-builder
        run: cd embed-builder && cargo sync-readme --check
      - name: Run in mention
        run: cd mention && cargo sync-readme --check
      - name: Run in util
        run: cd util && cargo sync-readme --check

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1

      - name: Run cargo test
        run: cargo test

  test-features:
    name: Test ${{ matrix.package }} feat. ${{ matrix.features }}
    needs: [test]
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        package:
          - http
          - gateway
          - lavalink
        features:
          - native
          - rustls
          - simd-json

        include:
          - package: http
            features: simd-json
            additional: --features rustls
            rustflags: "-C target-cpu=native"
          - package: gateway
            features: rustls
            additional: --features zlib-stock
          - package: gateway
            features: native
            additional: --features zlib-stock
          - package: gateway
            features: simd-json
            additional: --features rustls,zlib-stock
            rustflags: "-C target-cpu=native"
          - package: lavalink
            additional: --features http-support

          - package: util
            features: full

        exclude:
          - package: lavalink
            features: simd-json

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1

      - name: Test ${{ matrix.package }} feat. ${{ matrix.features }}
        working-directory: ${{ matrix.package }}
        env:
          RUSTFLAGS: ${{ matrix.rustflags }}
        run: |
          cargo test --no-default-features --features ${{ matrix.features }} ${{ matrix.additional }}
