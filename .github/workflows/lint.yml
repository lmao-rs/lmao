name: Lint

on: [push, pull_request]

env:
  # Use `haswell` instead of `native` due to some GitHub
  # Actions runners not supporting some `avx512` instructions.
  RUSTFLAGS: -C target-cpu=haswell

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1

      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --workspace --benches --examples --tests --all-features

  codespell:
    name: Spelling
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Run Codespell
        uses: codespell-project/actions-codespell@master

  min-vers:
    name: Minimal crate versions
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1

      - name: Install cargo-hack
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-hack

      - name: Check minimal versions
        run: |
          # Ignore dev-deps
          cargo hack --remove-dev-deps --workspace
          # Ignore examples
          sed -i '/examples/d' Cargo.toml
          # Update Cargo.lock to minimal version dependencies.
          cargo update -Z minimal-versions
          cargo check --all-features

  rustfmt:
    name: Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Run cargo fmt
        run: cargo fmt --all -- --check
